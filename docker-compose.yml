version: "3"

services:

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
#      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - "rabbitmq_data:/data"

  nginx:
    build: ./nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    ports:
      - "80:80"
    depends_on:
      - user_service
      - book_service
      - issue_service

  postgresdb:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=p_password
    volumes:
      - ./postgres/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    depends_on:
      - rabbitmq

  user_service:
    build:
      context: ./components/user/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    command: gunicorn -b 0.0.0.0:8000 composites.user_api:app --reload
#    restart: unless-stopped
    depends_on:
      - postgresdb
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=p_password
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_DATABASE=users_database
      - RABBIT_USER = user
      - RABBIT_PASSWORD = password
      - RABBIT_HOST = rabbitmq
      - RABBIT_PORT = 5672
    volumes:
      - ./components/user:/app/user

  book_service:
    build:
      context: ./components/book
      dockerfile: Dockerfile
    command: gunicorn -b 0.0.0.0:8001 book.composites.book_api:app --reload
#    restart: unless-stopped
    depends_on:
      - postgresdb
    ports:
      - "8001:8001"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=p_password
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_DATABASE=books_database
      - RABBIT_USER = user
      - RABBIT_PASSWORD = password
      - RABBIT_HOST = rabbitmq
      - RABBIT_PORT = 5672
    volumes:
      - ./components/book:/app/book

  issue_service:
    build:
      context: ./components/issue
      dockerfile: Dockerfile
    command: gunicorn -b 0.0.0.0:8002 issue.composites.issue_api:app --reload
#    restart: unless-stopped
    depends_on:
      - postgresdb
    ports:
      - "8002:8002"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=p_password
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_DATABASE=issues_database
      - RABBIT_USER = user
      - RABBIT_PASSWORD = password
      - RABBIT_HOST = rabbitmq
      - RABBIT_PORT = 5672
    volumes:
      - ./components/issue:/app/issue

  issue_service_consumer:
    build:
      context: ./components/issue
      dockerfile: Dockerfile
#    command: python composites.consumer.py
    command: python3 -m composites.consumer.py
    depends_on:
      - postgresdb
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=p_password
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_DATABASE=issues_database
      - RABBIT_USER = user
      - RABBIT_PASSWORD = password
      - RABBIT_HOST = rabbitmq
      - RABBIT_PORT = 5672
    volumes:
      - ./components/issue:/app/issue

volumes:
  postgres_data:
  rabbitmq_data:
